name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scan every Monday at 9 AM UTC
    - cron: '0 9 * * 1'

jobs:
  # CodeQL Analysis
  codeql:
    name: 🔒 CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔒 Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality

      - name: 🏗️ Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  # Dependency Vulnerability Scan
  dependency-scan:
    name: 🔍 Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔒 Run npm audit
        run: |
          echo "🔍 Running npm audit..."
          npm audit --audit-level=high
          
      - name: 🔒 Check for known vulnerabilities
        run: |
          echo "🔍 Checking for known vulnerabilities..."
          npx audit-ci --config .audit-ci.json
        continue-on-error: true

  # Snyk Security Scan
  snyk:
    name: 🐍 Snyk Security Scan
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
        continue-on-error: true

      - name: 📊 Upload Snyk results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: snyk.sarif

  # Security Headers Check
  security-headers:
    name: 🛡️ Security Headers Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build application
        run: npm run build

      - name: 🚀 Start application
        run: |
          npm run start &
          sleep 10
        
      - name: 🛡️ Check security headers
        run: |
          echo "🛡️ Checking security headers..."
          
          # Check for important security headers
          curl -I http://localhost:3000 | grep -i "x-frame-options\|x-content-type-options\|x-xss-protection\|strict-transport-security\|content-security-policy" || echo "⚠️ Some security headers missing"
          
          echo "✅ Security headers check completed"

  # OWASP ZAP Baseline Scan
  zap-scan:
    name: 🕷️ OWASP ZAP Baseline Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build and start application
        run: |
          npm run build
          npm run start &
          sleep 15

      - name: 🕷️ ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'http://localhost:3000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

  # Summary
  security-summary:
    name: 📋 Security Summary
    runs-on: ubuntu-latest
    needs: [codeql, dependency-scan, snyk, security-headers]
    if: always()
    
    steps:
      - name: 📋 Security scan summary
        run: |
          echo "🔒 Security Scanning Summary"
          echo "=========================="
          echo "✅ CodeQL Analysis: ${{ needs.codeql.result }}"
          echo "✅ Dependency Scan: ${{ needs.dependency-scan.result }}"
          echo "✅ Snyk Scan: ${{ needs.snyk.result }}"
          echo "✅ Security Headers: ${{ needs.security-headers.result }}"
          echo ""
          echo "📊 Check the Security tab in GitHub for detailed results"
