{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/pontus.horberg-Local/SimpleCryptoTool/SimpleCryptoTool/app/api/crypto/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\n\nexport interface CryptoData {\n  id: string\n  name: string\n  symbol: string\n  current_price: number\n  price_change_24h: number\n  price_change_percentage_24h: number\n  market_cap: number\n  total_volume: number\n  image: string\n}\n\nexport async function GET(request: Request) {\n  try {\n    const { searchParams } = new URL(request.url)\n    const symbol = searchParams.get('symbol')\n    \n    if (symbol) {\n      console.log(`ðŸ“¡ Fetching data for specific symbol: ${symbol}`)\n      \n      const coinResponse = await fetch(\n        `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=${symbol}&order=market_cap_desc&sparkline=false&locale=en`,\n        { next: { revalidate: 60 } }\n      )\n\n      if (!coinResponse.ok) {\n        throw new Error(`CoinGecko API error for ${symbol}: ${coinResponse.status}`)\n      }\n\n      const coinData: CryptoData[] = await coinResponse.json()\n      \n      if (coinData.length > 0) {\n        console.log(`âœ… Got data for ${symbol}:`, coinData[0])\n        return NextResponse.json({\n          success: true,\n          data: coinData[0],\n          ...coinData[0],\n          timestamp: new Date().toISOString()\n        })\n      } else {\n        throw new Error(`No data found for symbol: ${symbol}`)\n      }\n    }\n\n    const coinsResponse = await fetch(\n      'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=false&locale=en',\n      { next: { revalidate: 60 } }\n    )\n\n    if (!coinsResponse.ok) {\n      throw new Error(`CoinGecko API error: ${coinsResponse.status}`)\n    }\n\n    const coinsData: CryptoData[] = await coinsResponse.json()\n\n    return NextResponse.json({\n      success: true,\n      data: coinsData,\n      timestamp: new Date().toISOString()\n    })\n  } catch (error) {\n    console.error('Error fetching crypto data:', error)\n    \n    const { searchParams } = new URL(request.url)\n    const symbol = searchParams.get('symbol')\n    \n    if (symbol) {\n      const symbolFallbacks: { [key: string]: CryptoData } = {\n        'bitcoin': {\n          id: 'bitcoin',\n          name: 'Bitcoin',\n          symbol: 'btc',\n          current_price: 43250.00,\n          price_change_24h: 1250.30,\n          price_change_percentage_24h: 2.98,\n          market_cap: 847000000000,\n          total_volume: 23400000000,\n          image: 'https://assets.coingecko.com/coins/images/1/small/bitcoin.png'\n        },\n        'ethereum': {\n          id: 'ethereum', \n          name: 'Ethereum',\n          symbol: 'eth',\n          current_price: 2650.75,\n          price_change_24h: -45.20,\n          price_change_percentage_24h: -1.68,\n          market_cap: 318000000000,\n          total_volume: 12100000000,\n          image: 'https://assets.coingecko.com/coins/images/279/small/ethereum.png'\n        }\n      }\n      \n      const fallbackData = symbolFallbacks[symbol] || symbolFallbacks['bitcoin']\n      \n      return NextResponse.json({\n        success: false,\n        data: fallbackData,\n        ...fallbackData,\n        error: 'Using fallback data due to API error',\n        timestamp: new Date().toISOString()\n      }, { status: 200 })\n    }\n    \n    const mockData: CryptoData[] = [\n      {\n        id: 'bitcoin',\n        name: 'Bitcoin',\n        symbol: 'btc',\n        current_price: 43250.00,\n        price_change_24h: 1250.30,\n        price_change_percentage_24h: 2.98,\n        market_cap: 847000000000,\n        total_volume: 23400000000,\n        image: 'https://assets.coingecko.com/coins/images/1/small/bitcoin.png'\n      },\n      {\n        id: 'ethereum', \n        name: 'Ethereum',\n        symbol: 'eth',\n        current_price: 2650.75,\n        price_change_24h: -45.20,\n        price_change_percentage_24h: -1.68,\n        market_cap: 318000000000,\n        total_volume: 12100000000,\n        image: 'https://assets.coingecko.com/coins/images/279/small/ethereum.png'\n      }\n    ]\n\n    return NextResponse.json({\n      success: false,\n      data: mockData,\n      error: 'Using fallback data due to API error',\n      timestamp: new Date().toISOString()\n    }, { status: 200 })\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}