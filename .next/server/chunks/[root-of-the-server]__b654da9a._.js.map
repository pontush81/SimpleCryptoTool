{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/pontus.horberg-Local/SimpleCryptoTool/SimpleCryptoTool/lib/indicators.ts"],"sourcesContent":["export interface PriceData {\n  timestamp: string\n  open: number\n  high: number\n  low: number\n  close: number\n  volume: number\n}\n\nexport interface RSIResult {\n  value: number\n  signal: 'oversold' | 'overbought' | 'neutral'\n  timestamp: string\n}\n\nexport interface MACDResult {\n  macd: number\n  signal: number\n  histogram: number\n  crossover: 'bullish' | 'bearish' | 'none'\n  timestamp: string\n}\n\nexport interface CTOResult {\n  value: number\n  signal: 'bullish' | 'bearish' | 'neutral'\n  crossover: 'bullish' | 'bearish' | 'none'\n  timestamp: string\n}\n\nexport interface TradingSignal {\n  type: 'buy' | 'sell' | 'hold'\n  strength: number\n  confidence: number\n  reasons: string[]\n  timestamp: string\n}\n\nexport function calculateRSI(prices: number[], period: number = 14): RSIResult[] {\n  if (prices.length < period + 1) {\n    return []\n  }\n\n  const results: RSIResult[] = []\n  const gains: number[] = []\n  const losses: number[] = []\n\n  for (let i = 1; i < prices.length; i++) {\n    const change = prices[i] - prices[i - 1]\n    gains.push(change > 0 ? change : 0)\n    losses.push(change < 0 ? Math.abs(change) : 0)\n  }\n\n  for (let i = period - 1; i < gains.length; i++) {\n    const avgGain = gains.slice(i - period + 1, i + 1).reduce((a, b) => a + b, 0) / period\n    const avgLoss = losses.slice(i - period + 1, i + 1).reduce((a, b) => a + b, 0) / period\n    \n    const rs = avgLoss === 0 ? 100 : avgGain / avgLoss\n    const rsi = 100 - (100 / (1 + rs))\n    \n    let signal: 'oversold' | 'overbought' | 'neutral' = 'neutral'\n    if (rsi <= 30) signal = 'oversold'\n    else if (rsi >= 70) signal = 'overbought'\n    \n    results.push({\n      value: rsi,\n      signal,\n      timestamp: new Date().toISOString()\n    })\n  }\n\n  return results\n}\n\nexport function calculateEMA(prices: number[], period: number): number[] {\n  if (prices.length < period) return []\n  \n  const multiplier = 2 / (period + 1)\n  const ema: number[] = []\n  \n  ema[0] = prices.slice(0, period).reduce((a, b) => a + b, 0) / period\n  \n  for (let i = 1; i < prices.length - period + 1; i++) {\n    ema[i] = (prices[i + period - 1] - ema[i - 1]) * multiplier + ema[i - 1]\n  }\n  \n  return ema\n}\n\nexport function calculateMACD(prices: number[], fastPeriod: number = 12, slowPeriod: number = 26, signalPeriod: number = 9): MACDResult[] {\n  if (prices.length < slowPeriod + signalPeriod) {\n    return []\n  }\n\n  const fastEMA = calculateEMA(prices, fastPeriod)\n  const slowEMA = calculateEMA(prices, slowPeriod)\n  \n  if (fastEMA.length === 0 || slowEMA.length === 0) return []\n  \n  const macdLine: number[] = []\n  const minLength = Math.min(fastEMA.length, slowEMA.length)\n  \n  for (let i = 0; i < minLength; i++) {\n    macdLine.push(fastEMA[i] - slowEMA[i])\n  }\n  \n  const signalLine = calculateEMA(macdLine, signalPeriod)\n  const results: MACDResult[] = []\n  \n  for (let i = 0; i < signalLine.length; i++) {\n    const histogram = macdLine[i] - signalLine[i]\n    let crossover: 'bullish' | 'bearish' | 'none' = 'none'\n    \n    if (i > 0) {\n      const prevHistogram = macdLine[i - 1] - signalLine[i - 1]\n      if (prevHistogram <= 0 && histogram > 0) crossover = 'bullish'\n      else if (prevHistogram >= 0 && histogram < 0) crossover = 'bearish'\n    }\n    \n    results.push({\n      macd: macdLine[i],\n      signal: signalLine[i],\n      histogram,\n      crossover,\n      timestamp: new Date().toISOString()\n    })\n  }\n  \n  return results\n}\n\nexport function generateTradingSignals(rsi: RSIResult[], macd: MACDResult[]): TradingSignal[] {\n  if (rsi.length === 0 || macd.length === 0) return []\n  \n  const signals: TradingSignal[] = []\n  const minLength = Math.min(rsi.length, macd.length)\n  \n  for (let i = 0; i < minLength; i++) {\n    const currentRSI = rsi[i]\n    const currentMACD = macd[i]\n    \n    let type: 'buy' | 'sell' | 'hold' = 'hold'\n    let strength = 50\n    let confidence = 50\n    const reasons: string[] = []\n    \n    if (currentRSI.signal === 'oversold' && currentMACD.crossover === 'bullish') {\n      type = 'buy'\n      strength = 80\n      confidence = 75\n      reasons.push('RSI oversold', 'MACD bullish crossover')\n    } else if (currentRSI.signal === 'overbought' && currentMACD.crossover === 'bearish') {\n      type = 'sell'\n      strength = 80\n      confidence = 75\n      reasons.push('RSI overbought', 'MACD bearish crossover')\n    } else if (currentRSI.signal === 'oversold') {\n      type = 'buy'\n      strength = 60\n      confidence = 60\n      reasons.push('RSI oversold')\n    } else if (currentRSI.signal === 'overbought') {\n      type = 'sell'\n      strength = 60\n      confidence = 60\n      reasons.push('RSI overbought')\n    }\n    \n    signals.push({\n      type,\n      strength,\n      confidence,\n      reasons,\n      timestamp: new Date().toISOString()\n    })\n  }\n  \n  return signals\n}\n\nexport function getLatestSignal(signals: TradingSignal[]): TradingSignal | null {\n  return signals.length > 0 ? signals[signals.length - 1] : null\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///Users/pontus.horberg-Local/SimpleCryptoTool/SimpleCryptoTool/app/api/technical-analysis/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport { calculateRSI, calculateMACD, generateTradingSignals, getLatestSignal } from '../../../lib/indicators'\n\nexport async function GET(request: Request) {\n  try {\n    const { searchParams } = new URL(request.url)\n    const symbol = searchParams.get('symbol') || 'bitcoin'\n    \n    console.log(`üîç Generating technical analysis for ${symbol}`)\n    \n    const cryptoResponse = await fetch(`${request.url.replace('/api/technical-analysis', '/api/crypto')}?symbol=${symbol}`)\n    \n    if (!cryptoResponse.ok) {\n      throw new Error('Failed to fetch current crypto prices')\n    }\n    \n    const cryptoData = await cryptoResponse.json()\n    \n    const mockPrices = [\n      42000, 42500, 41800, 43200, 44100, 43800, 42900, 43500, 44200, 43700,\n      44800, 45200, 44600, 43900, 44700, 45100, 44300, 43600, 44900, 45400,\n      44800, 43200, 44600, 45800, 46200, 45600, 44900, 45700, 46100, 45300\n    ]\n    \n    const rsiResults = calculateRSI(mockPrices, 14)\n    const macdResults = calculateMACD(mockPrices, 12, 26, 9)\n    const tradingSignals = generateTradingSignals(rsiResults, macdResults)\n    const latestSignal = getLatestSignal(tradingSignals)\n    \n    const latestRSI = rsiResults[rsiResults.length - 1]\n    const latestMACD = macdResults[macdResults.length - 1]\n    \n    return NextResponse.json({\n      success: true,\n      symbol,\n      current_price: cryptoData.current_price || 43250,\n      indicators: {\n        rsi: {\n          value: latestRSI?.value || 50,\n          signal: latestRSI?.signal || 'neutral'\n        },\n        macd: {\n          value: latestMACD?.macd || 0,\n          signal: latestMACD?.signal || 0,\n          histogram: latestMACD?.histogram || 0,\n          crossover: latestMACD?.crossover || 'none'\n        }\n      },\n      trading_signal: latestSignal || {\n        type: 'hold',\n        strength: 50,\n        confidence: 50,\n        reasons: ['Neutral market conditions'],\n        timestamp: new Date().toISOString()\n      },\n      timestamp: new Date().toISOString()\n    })\n  } catch (error) {\n    console.error('Error in technical analysis:', error)\n    \n    return NextResponse.json({\n      success: false,\n      symbol: 'bitcoin',\n      current_price: 43250,\n      indicators: {\n        rsi: {\n          value: 50,\n          signal: 'neutral'\n        },\n        macd: {\n          value: 0,\n          signal: 0,\n          histogram: 0,\n          crossover: 'none'\n        }\n      },\n      trading_signal: {\n        type: 'hold',\n        strength: 50,\n        confidence: 50,\n        reasons: ['Using fallback data'],\n        timestamp: new Date().toISOString()\n      },\n      error: 'Using fallback data due to API error',\n      timestamp: new Date().toISOString()\n    }, { status: 200 })\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,IAAI,OAAgB;IACxC,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,SAAS,aAAa,GAAG,CAAC,aAAa;QAE7C,QAAQ,GAAG,CAAC,CAAC,qCAAqC,EAAE,QAAQ;QAE5D,MAAM,iBAAiB,MAAM,MAAM,GAAG,QAAQ,GAAG,CAAC,OAAO,CAAC,2BAA2B,eAAe,QAAQ,EAAE,QAAQ;QAEtH,IAAI,CAAC,eAAe,EAAE,EAAE;YACtB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,aAAa,MAAM,eAAe,IAAI;QAE5C,MAAM,aAAa;YACjB;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAC/D;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAC/D;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;SAChE;QAED,MAAM,aAAa,CAAA,GAAA,mHAAA,CAAA,eAAY,AAAD,EAAE,YAAY;QAC5C,MAAM,cAAc,CAAA,GAAA,mHAAA,CAAA,gBAAa,AAAD,EAAE,YAAY,IAAI,IAAI;QACtD,MAAM,iBAAiB,CAAA,GAAA,mHAAA,CAAA,yBAAsB,AAAD,EAAE,YAAY;QAC1D,MAAM,eAAe,CAAA,GAAA,mHAAA,CAAA,kBAAe,AAAD,EAAE;QAErC,MAAM,YAAY,UAAU,CAAC,WAAW,MAAM,GAAG,EAAE;QACnD,MAAM,aAAa,WAAW,CAAC,YAAY,MAAM,GAAG,EAAE;QAEtD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT;YACA,eAAe,WAAW,aAAa,IAAI;YAC3C,YAAY;gBACV,KAAK;oBACH,OAAO,WAAW,SAAS;oBAC3B,QAAQ,WAAW,UAAU;gBAC/B;gBACA,MAAM;oBACJ,OAAO,YAAY,QAAQ;oBAC3B,QAAQ,YAAY,UAAU;oBAC9B,WAAW,YAAY,aAAa;oBACpC,WAAW,YAAY,aAAa;gBACtC;YACF;YACA,gBAAgB,gBAAgB;gBAC9B,MAAM;gBACN,UAAU;gBACV,YAAY;gBACZ,SAAS;oBAAC;iBAA4B;gBACtC,WAAW,IAAI,OAAO,WAAW;YACnC;YACA,WAAW,IAAI,OAAO,WAAW;QACnC;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAE9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,QAAQ;YACR,eAAe;YACf,YAAY;gBACV,KAAK;oBACH,OAAO;oBACP,QAAQ;gBACV;gBACA,MAAM;oBACJ,OAAO;oBACP,QAAQ;oBACR,WAAW;oBACX,WAAW;gBACb;YACF;YACA,gBAAgB;gBACd,MAAM;gBACN,UAAU;gBACV,YAAY;gBACZ,SAAS;oBAAC;iBAAsB;gBAChC,WAAW,IAAI,OAAO,WAAW;YACnC;YACA,OAAO;YACP,WAAW,IAAI,OAAO,WAAW;QACnC,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF","debugId":null}}]
}