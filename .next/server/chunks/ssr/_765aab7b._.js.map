{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/pontus.horberg-Local/SimpleCryptoTool/SimpleCryptoTool/components/CryptoSelector.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect } from 'react'\nimport { ChevronDown, Bitcoin, TrendingUp, TrendingDown } from 'lucide-react'\n\ninterface CryptoOption {\n  id: string\n  name: string\n  symbol: string\n  current_price: number\n  price_change_percentage_24h: number\n  image: string\n}\n\ninterface CryptoSelectorProps {\n  cryptoData: CryptoOption[]\n  selectedCrypto: string\n  onCryptoChange: (cryptoId: string) => void\n  className?: string\n}\n\nexport default function CryptoSelector({ \n  cryptoData, \n  selectedCrypto, \n  onCryptoChange, \n  className = '' \n}: CryptoSelectorProps) {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const selectedCoin = cryptoData.find(crypto => crypto.id === selectedCrypto) || cryptoData[0]\n\n  const handleSelect = (cryptoId: string) => {\n    onCryptoChange(cryptoId)\n    setIsOpen(false)\n  }\n\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: price < 1 ? 4 : 2\n    }).format(price)\n  }\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as HTMLElement\n      if (!target.closest('.crypto-selector')) {\n        setIsOpen(false)\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => document.removeEventListener('mousedown', handleClickOutside)\n  }, [])\n\n  if (!selectedCoin) return null\n\n  return (\n    <div className={`relative crypto-selector ${className}`}>\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"w-full flex items-center justify-between p-3 bg-white border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors min-h-[60px]\"\n      >\n        <div className=\"flex items-center space-x-2 flex-1 min-w-0\">\n          <img\n            src={selectedCoin.image}\n            alt={selectedCoin.name}\n            className=\"w-6 h-6 rounded-full flex-shrink-0\"\n            onError={(e) => {\n              e.currentTarget.style.display = 'none'\n              e.currentTarget.nextElementSibling?.classList.remove('hidden')\n            }}\n          />\n          <div className=\"hidden p-1 bg-orange-100 rounded-full w-6 h-6 flex items-center justify-center flex-shrink-0\">\n            <Bitcoin className=\"h-3 w-3 text-orange-600\" />\n          </div>\n          <div className=\"text-left min-w-0 flex-1\">\n            <p className=\"font-medium text-gray-900 text-sm truncate\">\n              {selectedCoin.name.length > 10 ? selectedCoin.name.substring(0, 10) + '...' : selectedCoin.name}\n            </p>\n            <p className=\"text-xs text-gray-500\">{selectedCoin.symbol.toUpperCase()}</p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2 flex-shrink-0\">\n          <div className=\"text-right\">\n            <p className=\"font-semibold text-gray-900 text-sm\">\n              {formatPrice(selectedCoin.current_price)}\n            </p>\n            <div className={`flex items-center justify-end text-xs ${\n              selectedCoin.price_change_percentage_24h >= 0 ? 'text-green-600' : 'text-red-600'\n            }`}>\n              {selectedCoin.price_change_percentage_24h >= 0 ? (\n                <TrendingUp className=\"h-2.5 w-2.5 mr-0.5\" />\n              ) : (\n                <TrendingDown className=\"h-2.5 w-2.5 mr-0.5\" />\n              )}\n              <span className=\"whitespace-nowrap\">\n                {selectedCoin.price_change_percentage_24h >= 0 ? '+' : ''}\n                {selectedCoin.price_change_percentage_24h.toFixed(2)}%\n              </span>\n            </div>\n          </div>\n          <ChevronDown className={`h-3 w-3 text-gray-400 transition-transform flex-shrink-0 ${\n            isOpen ? 'rotate-180' : ''\n          }`} />\n        </div>\n      </button>\n\n      {isOpen && (\n        <div className=\"absolute top-full left-0 right-0 z-50 mt-2 bg-white border border-gray-200 rounded-lg shadow-lg max-h-80 overflow-hidden\">\n          <div className=\"max-h-60 overflow-y-auto\">\n            {cryptoData.map((crypto) => (\n              <button\n                key={crypto.id}\n                onClick={() => handleSelect(crypto.id)}\n                className={`w-full flex items-center justify-between p-2.5 hover:bg-gray-50 transition-colors ${\n                  crypto.id === selectedCrypto ? 'bg-blue-50 border-r-2 border-blue-500' : ''\n                }`}\n              >\n                <div className=\"flex items-center space-x-2 flex-1 min-w-0\">\n                  <img\n                    src={crypto.image}\n                    alt={crypto.name}\n                    className=\"w-5 h-5 rounded-full flex-shrink-0\"\n                    onError={(e) => {\n                      e.currentTarget.style.display = 'none'\n                      e.currentTarget.nextElementSibling?.classList.remove('hidden')\n                    }}\n                  />\n                  <div className=\"hidden p-1 bg-orange-100 rounded-full w-5 h-5 flex items-center justify-center flex-shrink-0\">\n                    <Bitcoin className=\"h-2.5 w-2.5 text-orange-600\" />\n                  </div>\n                  <div className=\"text-left min-w-0 flex-1\">\n                    <p className=\"font-medium text-gray-900 text-sm truncate\">\n                      {crypto.name.length > 12 ? crypto.name.substring(0, 12) + '...' : crypto.name}\n                    </p>\n                    <p className=\"text-xs text-gray-500\">{crypto.symbol.toUpperCase()}</p>\n                  </div>\n                </div>\n                \n                <div className=\"text-right flex-shrink-0\">\n                  <p className=\"text-sm font-semibold text-gray-900\">\n                    {formatPrice(crypto.current_price)}\n                  </p>\n                  <div className={`flex items-center justify-end text-xs ${\n                    crypto.price_change_percentage_24h >= 0 ? 'text-green-600' : 'text-red-600'\n                  }`}>\n                    {crypto.price_change_percentage_24h >= 0 ? (\n                      <TrendingUp className=\"h-2 w-2 mr-0.5\" />\n                    ) : (\n                      <TrendingDown className=\"h-2 w-2 mr-0.5\" />\n                    )}\n                    <span className=\"whitespace-nowrap\">\n                      {crypto.price_change_percentage_24h >= 0 ? '+' : ''}\n                      {crypto.price_change_percentage_24h.toFixed(1)}%\n                    </span>\n                  </div>\n                </div>\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":["file:///Users/pontus.horberg-Local/SimpleCryptoTool/SimpleCryptoTool/components/CryptoCycleSignals.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect } from 'react'\nimport { RefreshCw, AlertTriangle } from 'lucide-react'\n\ninterface TechnicalData {\n  success: boolean\n  symbol: string\n  current_price: number\n  indicators: {\n    rsi: {\n      value: number\n      signal: 'oversold' | 'overbought' | 'neutral'\n    }\n    macd: {\n      value: number\n      signal: number\n      histogram: number\n      crossover: 'bullish' | 'bearish' | 'none'\n    }\n  }\n  trading_signal: {\n    type: 'buy' | 'sell' | 'hold'\n    strength: number\n    confidence: number\n    reasons: string[]\n  }\n  timestamp: string\n}\n\ninterface CryptoCycleSignalsProps {\n  symbol: string\n  className?: string\n}\n\nexport default function CryptoCycleSignals({ symbol, className = '' }: CryptoCycleSignalsProps) {\n  const [data, setData] = useState<TechnicalData | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [showDisclaimer, setShowDisclaimer] = useState(false)\n\n  const fetchData = async () => {\n    try {\n      setLoading(true)\n      setError(null)\n      \n      const response = await fetch(`/api/technical-analysis?symbol=${symbol}`)\n      const result = await response.json()\n      \n      if (result.success || result.error) {\n        setData(result)\n      } else {\n        throw new Error('Failed to fetch technical analysis data')\n      }\n    } catch (err) {\n      console.error('Error fetching technical analysis:', err)\n      setError('Kunde inte hämta data')\n      \n      setData({\n        success: false,\n        symbol,\n        current_price: 43250,\n        indicators: {\n          rsi: { value: 50, signal: 'neutral' },\n          macd: { value: 0, signal: 0, histogram: 0, crossover: 'none' }\n        },\n        trading_signal: {\n          type: 'hold',\n          strength: 50,\n          confidence: 50,\n          reasons: ['Neutral market conditions']\n        },\n        timestamp: new Date().toISOString()\n      })\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [symbol])\n\n  const getSimpleSignal = () => {\n    if (!data) return { signal: 'VÄNTA', confidence: 50, color: 'yellow', emoji: '🟡' }\n    \n    const { rsi, macd } = data.indicators\n    const tradingSignal = data.trading_signal\n    \n    if (tradingSignal.type === 'buy' && tradingSignal.confidence > 60) {\n      return { signal: 'KÖPLÄGE', confidence: tradingSignal.confidence, color: 'green', emoji: '🟢' }\n    } else if (tradingSignal.type === 'sell' && tradingSignal.confidence > 60) {\n      return { signal: 'SÄLJLÄGE', confidence: tradingSignal.confidence, color: 'red', emoji: '🔴' }\n    } else {\n      return { signal: 'VÄNTA', confidence: tradingSignal.confidence, color: 'yellow', emoji: '🟡' }\n    }\n  }\n\n  const getMarketTemperature = () => {\n    if (!data) return { temp: 'VARMT', emoji: '🌡️', color: 'orange' }\n    \n    const rsiValue = data.indicators.rsi.value\n    \n    if (rsiValue <= 30) {\n      return { temp: 'KALLT', emoji: '🧊', color: 'blue' }\n    } else if (rsiValue >= 70) {\n      return { temp: 'HETT', emoji: '🔥', color: 'red' }\n    } else {\n      return { temp: 'VARMT', emoji: '🌡️', color: 'orange' }\n    }\n  }\n\n  const getSignalExplanation = () => {\n    const simpleSignal = getSimpleSignal()\n    \n    switch (simpleSignal.signal) {\n      case 'KÖPLÄGE':\n        return 'Marknaden visar positiva signaler - kan vara ett bra tillfälle att köpa'\n      case 'SÄLJLÄGE':\n        return 'Marknaden visar negativa signaler - överväg att sälja eller vänta'\n      case 'VÄNTA':\n      default:\n        return 'Marknaden är i en neutral fas - vänta på tydligare signaler'\n    }\n  }\n\n  const getTemperatureExplanation = () => {\n    const temp = getMarketTemperature()\n    \n    switch (temp.temp) {\n      case 'KALLT':\n        return 'Neutral fas - Avvaktande'\n      case 'HETT':\n        return 'Hög aktivitet - Försiktighet'\n      case 'VARMT':\n      default:\n        return 'Neutral fas - Avvaktande'\n    }\n  }\n\n  const simpleSignal = getSimpleSignal()\n  const marketTemp = getMarketTemperature()\n\n  if (loading) {\n    return (\n      <div className={`bg-white p-4 md:p-6 rounded-lg shadow-sm border border-gray-200 ${className}`}>\n        <div className=\"flex items-center justify-center py-8\">\n          <RefreshCw className=\"h-6 w-6 animate-spin text-blue-600 mr-2\" />\n          <span className=\"text-gray-600\">Laddar signaler...</span>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className={`bg-white p-4 md:p-6 rounded-lg shadow-sm border border-gray-200 ${className}`}>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Crypto Cykelsignaler</h3>\n        <div className=\"flex items-center space-x-2\">\n          <span className=\"text-xs text-gray-500 bg-green-100 px-2 py-1 rounded\">\n            Enkla signaler för {data?.symbol?.toUpperCase() || symbol.toUpperCase()} - Ingen komplex analys behövs\n          </span>\n          <button \n            onClick={fetchData}\n            className=\"text-xs text-blue-600 hover:text-blue-800 p-1\"\n            title=\"Uppdatera data\"\n          >\n            <RefreshCw className=\"h-3 w-3\" />\n          </button>\n        </div>\n      </div>\n\n      <div className=\"text-sm text-gray-600 mb-6\">\n        📊 Enkla signaler för {data?.symbol?.toUpperCase() || symbol.toUpperCase()} - Ingen komplex analys behövs\n      </div>\n\n      {error && (\n        <div className=\"mb-4 p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\n          <div className=\"flex items-center\">\n            <AlertTriangle className=\"h-4 w-4 text-yellow-600 mr-2\" />\n            <span className=\"text-sm text-yellow-800\">{error} - Visar exempeldata</span>\n          </div>\n        </div>\n      )}\n\n      <div className=\"space-y-4\">\n        <div className={`p-4 rounded-lg border-2 ${\n          simpleSignal.color === 'green' ? 'bg-green-50 border-green-200' :\n          simpleSignal.color === 'red' ? 'bg-red-50 border-red-200' :\n          'bg-yellow-50 border-yellow-200'\n        }`}>\n          <div className=\"flex items-center justify-center mb-2\">\n            <span className=\"text-2xl mr-2\">{simpleSignal.emoji}</span>\n            <span className=\"text-xl font-bold text-gray-900\">{simpleSignal.signal}</span>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-sm font-medium text-gray-700 mb-1\">\n              {simpleSignal.confidence}% säkerhet\n            </div>\n            <div className=\"text-sm text-gray-600\">\n              {getSignalExplanation()}\n            </div>\n            <div className=\"text-xs text-gray-500 mt-2\">\n              Vänta på tydligare signaler\n            </div>\n          </div>\n        </div>\n\n        <div className={`p-3 rounded-lg ${\n          marketTemp.color === 'blue' ? 'bg-blue-50' :\n          marketTemp.color === 'red' ? 'bg-red-50' :\n          'bg-orange-50'\n        }`}>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <span className=\"text-lg mr-2\">{marketTemp.emoji}</span>\n              <span className=\"font-medium text-gray-900\">\n                Marknaden är {marketTemp.temp}\n              </span>\n            </div>\n            <div className=\"text-sm text-gray-600\">\n              {getTemperatureExplanation()}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mt-6 pt-4 border-t border-gray-200\">\n        <button\n          onClick={() => setShowDisclaimer(!showDisclaimer)}\n          className=\"flex items-center text-sm text-gray-600 hover:text-gray-800 transition-colors\"\n        >\n          <AlertTriangle className=\"h-4 w-4 mr-1\" />\n          Viktigt att läsa - Disclaimer\n        </button>\n\n        {showDisclaimer && (\n          <div className=\"mt-3 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n            <div className=\"text-sm text-yellow-800\">\n              <div className=\"font-semibold mb-2 flex items-center\">\n                <AlertTriangle className=\"h-4 w-4 mr-1\" />\n                VIKTIGT - LÄSA DETTA NOGGRANT\n              </div>\n              <ul className=\"space-y-1 text-xs\">\n                <li>• <strong>INTE FINANSIELL RÅDGIVNING:</strong> Detta är endast teknisk analys och stöd för dina egna beslut</li>\n                <li>• <strong>EGEN RISK:</strong> All kryptohandel innebär hög risk - du kan förlora hela din investering</li>\n                <li>• <strong>GÖR DIN RESEARCH:</strong> Använd detta som EN av många faktorer i ditt beslut</li>\n                <li>• <strong>INVESTERA ANSVARSFULLT:</strong> Investera aldrig mer än du har råd att förlora</li>\n                <li>• <strong>INGEN GARANTI:</strong> Tidigare resultat garanterar inte framtida prestanda</li>\n                <li>• <strong>SÖK PROFESSIONELL RÅDGIVNING:</strong> Konsultera en finansiell rådgivare för personlig vägledning</li>\n              </ul>\n              <div className=\"mt-3 text-center font-medium\">\n                Du är helt ansvarig för dina egna investeringsbeslut\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {data && (\n        <div className=\"mt-4 text-xs text-gray-400 text-center\">\n          Uppdaterad: {new Date(data.timestamp).toLocaleString('sv-SE')}\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 950, "column": 0}, "map": {"version":3,"sources":["file:///Users/pontus.horberg-Local/SimpleCryptoTool/SimpleCryptoTool/app/page.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect } from 'react'\nimport { RefreshCw, AlertTriangle } from 'lucide-react'\nimport CryptoSelector from '../components/CryptoSelector'\nimport CryptoCycleSignals from '../components/CryptoCycleSignals'\n\ninterface CryptoData {\n  id: string\n  name: string\n  symbol: string\n  current_price: number\n  price_change_24h: number\n  price_change_percentage_24h: number\n  market_cap: number\n  total_volume: number\n  image: string\n}\n\nexport default function HomePage() {\n  const [cryptoData, setCryptoData] = useState<CryptoData[]>([])\n  const [selectedCrypto, setSelectedCrypto] = useState('bitcoin')\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  const fetchCryptoData = async () => {\n    try {\n      setLoading(true)\n      setError(null)\n      \n      const response = await fetch('/api/crypto')\n      const result = await response.json()\n      \n      if (result.success || result.data) {\n        setCryptoData(result.data || [])\n      } else {\n        throw new Error('Failed to fetch crypto data')\n      }\n    } catch (err) {\n      console.error('Error fetching crypto data:', err)\n      setError('Kunde inte hämta kryptodata')\n      \n      setCryptoData([\n        {\n          id: 'bitcoin',\n          name: 'Bitcoin',\n          symbol: 'btc',\n          current_price: 43250.00,\n          price_change_24h: 1250.30,\n          price_change_percentage_24h: 2.98,\n          market_cap: 847000000000,\n          total_volume: 23400000000,\n          image: 'https://assets.coingecko.com/coins/images/1/small/bitcoin.png'\n        },\n        {\n          id: 'ethereum',\n          name: 'Ethereum',\n          symbol: 'eth',\n          current_price: 2650.75,\n          price_change_24h: -45.20,\n          price_change_percentage_24h: -1.68,\n          market_cap: 318000000000,\n          total_volume: 12100000000,\n          image: 'https://assets.coingecko.com/coins/images/279/small/ethereum.png'\n        }\n      ])\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchCryptoData()\n  }, [])\n\n  const handleCryptoChange = (cryptoId: string) => {\n    setSelectedCrypto(cryptoId)\n  }\n\n  const handleManualRefresh = () => {\n    fetchCryptoData()\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <header className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center\">\n              <h1 className=\"text-xl font-bold text-gray-900\">\n                📈 Simple Crypto Tool\n              </h1>\n              <span className=\"ml-3 text-sm text-gray-500 bg-green-100 px-2 py-1 rounded\">\n                Enkla Kryptosignaler\n              </span>\n            </div>\n            <button\n              onClick={handleManualRefresh}\n              className=\"flex items-center space-x-2 px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors\"\n            >\n              <RefreshCw className=\"h-4 w-4\" />\n              <span>Uppdatera</span>\n            </button>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"space-y-6\">\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n            <div className=\"flex items-start\">\n              <div className=\"flex-shrink-0\">\n                <AlertTriangle className=\"h-5 w-5 text-blue-600\" />\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-blue-800\">\n                  För vanliga människor - Inte professionella traders\n                </h3>\n                <div className=\"mt-2 text-sm text-blue-700\">\n                  <p>\n                    Detta verktyg ger dig enkla signaler för kryptomarknaden utan komplicerade diagram eller teknisk analys. \n                    <strong className=\"ml-1\">Detta är INTE finansiell rådgivning</strong> - använd det som stöd för dina egna beslut.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n              <div className=\"flex items-center\">\n                <AlertTriangle className=\"h-4 w-4 text-yellow-600 mr-2\" />\n                <span className=\"text-sm text-yellow-800\">{error} - Visar exempeldata</span>\n              </div>\n            </div>\n          )}\n\n          <div className=\"bg-white p-4 md:p-6 rounded-lg shadow-sm border border-gray-200\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Välj Kryptovaluta</h3>\n            {loading ? (\n              <div className=\"flex items-center justify-center py-8\">\n                <RefreshCw className=\"h-6 w-6 animate-spin text-blue-600 mr-2\" />\n                <span className=\"text-gray-600\">Laddar kryptovalutor...</span>\n              </div>\n            ) : (\n              <CryptoSelector \n                selectedCrypto={selectedCrypto}\n                onCryptoChange={handleCryptoChange}\n                cryptoData={cryptoData}\n              />\n            )}\n          </div>\n\n          <CryptoCycleSignals \n            symbol={selectedCrypto}\n            className=\"w-full\"\n          />\n\n          <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\n            <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Hur fungerar det?</h4>\n            <div className=\"text-sm text-gray-600 space-y-1\">\n              <p>• <strong>KÖPLÄGE:</strong> Marknaden visar positiva signaler</p>\n              <p>• <strong>SÄLJLÄGE:</strong> Marknaden visar negativa signaler</p>\n              <p>• <strong>VÄNTA:</strong> Marknaden är neutral - vänta på tydligare signaler</p>\n              <p>• <strong>Marknadstemperatur:</strong> KALLT (låg aktivitet), VARMT (normal), HETT (hög aktivitet)</p>\n            </div>\n          </div>\n\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n            <div className=\"flex items-start\">\n              <div className=\"flex-shrink-0\">\n                <AlertTriangle className=\"h-5 w-5 text-red-600\" />\n              </div>\n              <div className=\"ml-3\">\n                <h4 className=\"text-sm font-medium text-red-800 mb-2\">\n                  VIKTIGT - Läs detta innan du använder signalerna\n                </h4>\n                <div className=\"text-sm text-red-700 space-y-1\">\n                  <p>• Detta är <strong>INTE finansiell rådgivning</strong></p>\n                  <p>• Kryptohandel innebär <strong>hög risk</strong> - du kan förlora allt</p>\n                  <p>• Investera <strong>aldrig mer än du har råd att förlora</strong></p>\n                  <p>• Gör alltid din egen research innan du investerar</p>\n                  <p>• Konsultera en finansiell rådgivare för personlig vägledning</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n\n      <footer className=\"bg-white border-t border-gray-200 mt-12\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"text-center text-sm text-gray-500\">\n            <p>Simple Crypto Tool - Enkla kryptosignaler för vanliga människor</p>\n            <p className=\"mt-1\">Inte finansiell rådgivning • Använd på egen risk • © 2025</p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}